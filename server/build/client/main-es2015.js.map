{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.module.ts","./src/app/components/app.component.ts","./src/app/components/app.component.html","./src/app/components/game-canvas/game-canvas.component.ts","./src/app/components/game-canvas/game-canvas.component.html","./src/app/components/level-editor/level-editor.component.ts","./src/app/components/level-editor/level-editor.component.html","./src/app/core/blocks.ts","./src/app/core/constants.ts","./src/app/core/factions.ts","./src/app/core/mapGrid.ts","./src/app/gameplay/controllers/playerController.ts","./src/app/gameplay/controllers/walkerController.ts","./src/app/gameplay/entities/characterEntity.ts","./src/app/gameplay/entities/humanoidEntity.ts","./src/app/gameplay/items/armor.ts","./src/app/gameplay/items/equipmentItem.ts","./src/app/modules/app-routing.module.ts","./src/app/modules/materials.module.ts","./src/app/scenes/levelEditor.ts","./src/app/scenes/levelScene.ts","./src/app/services/asset.service.ts","./src/app/services/entity-spawner.service.ts","./src/app/services/input.service.ts","./src/app/services/level-loader.service.ts","./src/app/ui/entityHeader.ts","./src/app/ui/healthBarPlayer.ts","./src/app/ui/healthBarSmall.ts","./src/app/ui/ui.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEuB;AACN;AACqB;AAClB;AACwB;AACG;;AAiBjF,MAAM,SAAS;;wFAAT,SAAS,cAFR,sEAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,4EAAgB;YAChB,4FAAuB;YACvB,yEAAe;SAChB;mIAIU,SAAS,mBAblB,sEAAY;QACZ,iGAAmB;QACnB,oGAAoB,aAGpB,uEAAa;QACb,4EAAgB;QAChB,4FAAuB;QACvB,yEAAe;6FAKN,SAAS;cAfrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,sEAAY;oBACZ,iGAAmB;oBACnB,oGAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4EAAgB;oBAChB,4FAAuB;oBACvB,yEAAe;iBAChB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,sEAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QCPzB,yEACE;QAAA,yEACE;QAAA,wEACF;QAAA,4DAAM;QAEN,2EAA+B;QACjC,4DAAM;;6FDCO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAC9B;AAEsB;AAEC;;;;;AAO5C,MAAM,mBAAmB;IAK9B,YACU,YAA0B,EAC1B,WAA+B,EAC/B,MAAc;QAFd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAoB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,KAAK,GAAG,IAAI,+DAAK,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QAElD,IAAI,CAAC,MAAM,GAAG;YACZ,IAAI,EAAE,6CAAM,CAAC,IAAI;YACjB,MAAM,EAAE,gEAAS,CAAC,MAAM,CAAC,QAAQ;YACjC,KAAK,EAAE,gEAAS,CAAC,MAAM,CAAC,QAAQ;YAChC,KAAK,EAAE,CAAE,IAAI,CAAC,KAAK,CAAE;YACrB,MAAM,EAAE,eAAe;YACvB,OAAO,EAAE;gBACP,OAAO,EAAE,QAAQ;aAClB;YACD,GAAG,EAAE;gBACH,eAAe,EAAE,IAAI;aACtB;SACF,CAAC;IAEJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;YACjC,IAAI,CAAC,UAAU,GAAG,IAAI,6CAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,aAAa;QACX,MAAM,SAAS,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAE7C,IAAI,CAAC,SAAS,EAAE;YAAE,OAAO;SAAE;QAE3B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;;sFA5CU,mBAAmB;mGAAnB,mBAAmB;QCZhC,yEACE;QAAA,oEAA8B;QAE9B,4EAAoD;QAA1B,2IAAS,mBAAe,IAAC;QAAC,uEAAY;QAAA,4DAAS;QACzE,4EAAoD;QAA1B,2IAAS,mBAAe,IAAC;QAAC,uEAAY;QAAA,4DAAS;QAC3E,4DAAM;;6FDOO,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAIP;AACM;;;;;AAOlD,MAAM,oBAAoB;IAK/B,YACU,YAA0B,EAC1B,WAA+B,EAC/B,MAAc;QAFd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAoB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,KAAK,GAAG,IAAI,sEAAW,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QAExD,IAAI,CAAC,MAAM,GAAG;YACZ,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,MAAM,EAAE,gEAAS,CAAC,MAAM,CAAC,QAAQ;YACjC,KAAK,EAAE,gEAAS,CAAC,MAAM,CAAC,QAAQ;YAChC,KAAK,EAAE,CAAE,IAAI,CAAC,KAAK,CAAE;YACrB,MAAM,EAAE,eAAe;YACvB,OAAO,EAAE;gBACP,OAAO,EAAE,QAAQ;aAClB;YACD,kBAAkB,EAAE,IAAI;SACzB,CAAC;IAEJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;YACjC,IAAI,CAAC,UAAU,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,aAAa;QACX,MAAM,SAAS,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAE7C,IAAI,CAAC,SAAS,EAAE;YAAE,OAAO;SAAE;QAE3B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;;wFA1CU,oBAAoB;oGAApB,oBAAoB;QCZjC,yEACE;QAAA,oEAA8B;QAE9B,4EAAoD;QAA1B,4IAAS,mBAAe,IAAC;QAAC,uEAAY;QAAA,4DAAS;QACzE,4EAAoD;QAA1B,4IAAS,mBAAe,IAAC;QAAC,uEAAY;QAAA,4DAAS;QAC3E,4DAAM;;6FDOO,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,qDAAU;IACV,qDAAU;AACZ,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB;AAQM,MAAM,MAAM,GAAG,IAAI,GAAG,CAAoB;IAC/C,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,SAAS,CAAC,UAAU,EAAE,OAAO,EAAE,SAAS,EAAC,CAAC;IAC3D,CAAC,aAAa,EAAE,EAAC,IAAI,EAAE,SAAS,CAAC,UAAU,EAAE,OAAO,EAAE,eAAe,EAAC,CAAC;IACvE,CAAC,cAAc,EAAE,EAAC,IAAI,EAAE,SAAS,CAAC,UAAU,EAAE,OAAO,EAAE,cAAc,EAAC,CAAC;CACxE,CAAmC,CAAC;AAE9B,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;;;;;;;;;;;;;ACjBlD;AAAA;AAAA,MAAM,MAAM;;AACM,eAAQ,GAAG,GAAG,CAAC;AACf,eAAQ,GAAG,GAAG,CAAC;AAGjC,MAAM,KAAK;;AACO,iBAAW,GAAG,EAAE,CAAC;AACjB,iBAAW,GAAG,EAAE,CAAC;AACjB,aAAO,GAAG,EAAE,CAAC,CAAC,WAAW;AACzB,aAAO,GAAG,EAAE,CAAC,CAAC,WAAW;AAG3C,MAAM,SAAS;;AACG,wBAAc,GAAG,CAAC,CAAC;AACnB,oBAAU,GAAG,EAAE,CAAC;AAChB,oBAAU,GAAG,EAAE,CAAC;AAChB,2BAAiB,GAAG,CAAC,CAAC;AACtB,2BAAiB,GAAG,CAAC,CAAC;AAGjC,MAAM,SAAS,GAAG;IACvB,MAAM;IACN,KAAK;IACL,SAAS;CACV,CAAC;;;;;;;;;;;;;ACxBF;AAAA;AAAA;AAAA,IAAY,OAGX;AAHD,WAAY,OAAO;IACjB,yCAAM;IACN,2CAAO;AACT,CAAC,EAHW,OAAO,KAAP,OAAO,QAGlB;AAEM,SAAS,mBAAmB,CAAC,IAAa,EAAE,IAAa;IAC9D,IAAI,IAAI,KAAK,IAAI,EAAE;QAAE,OAAO,IAAI,CAAC;KAAE;IAEnC,OAAO,KAAK,CAAC;AACf,CAAC;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAkE;AAE1B;AAGjC,MAAM,OAAO;IAKlB,YAAoB,UAAiB,EAAU,OAAe;QAA1C,eAAU,GAAV,UAAU,CAAO;QAAU,YAAO,GAAP,OAAO,CAAQ;QAHtD,WAAM,GAAuC,EAAE,CAAC;QAItD,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;YACrC,KAAK,EAAE,oDAAS,CAAC,KAAK,CAAC,OAAO;YAC9B,MAAM,EAAE,oDAAS,CAAC,KAAK,CAAC,OAAO;YAC/B,SAAS,EAAE,oDAAS,CAAC,KAAK,CAAC,WAAW;YACtC,UAAU,EAAE,oDAAS,CAAC,KAAK,CAAC,WAAW;SACxC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,EAC3C,oDAAS,CAAC,KAAK,CAAC,WAAW,EAC3B,oDAAS,CAAC,KAAK,CAAC,WAAW,EAC3B,CAAC,EAAE,CAAC,CAAC,CAAC;QAER,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,IAAI,CAAC,8CAAM,CAAC,OAAO,EAAE,CAAC;aAChD,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,iDAAS,CAAC,UAAU,CAAC;aAC/C,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,gDAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;IAEM,QAAQ,CAAC,GAAwB,EAAE,KAAyB,EAAE,KAAK,GAAG,CAAC;QAC5E,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAE9D,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAEtD,4CAA4C;QAC5C,iDAAiD;QACjD,gDAAgD;QAChD,KAAK;QAEL,MAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAEtD,sDAAsD;QACtD,gDAAgD;QAChD,yCAAyC;QACzC,iCAAiC;QACjC,gCAAgC;QAChC,SAAS;QACT,OAAO;QAEP,KAAK,CAAC,SAAS,CACb,gDAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,EAC3B,OAAO,CAAC,CAAC,EACT,OAAO,CAAC,CAAC,CACV,CAAC;IACJ,CAAC;IAEM,QAAQ,CAAC,GAAwB,EAAE,IAAyB,EAAE,KAAyB,EAAE,KAAK,GAAG,CAAC;QACvG,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC3D,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;YAC3C,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aAC5D;SACF;IACH,CAAC;IAEM,UAAU,CAAC,GAAwB,EAAE,KAAK,GAAG,CAAC;QACnD,+FAA+F;QAC/F,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACtD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YACrB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC/B,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;YAC7C,OAAO,IAAI,CAAC;SACb;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QACxF,IAAI,CAAC,IAAI,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QAC3B,OAAO,gDAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAEM,MAAM;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAC7B,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CACZ,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAChB,KAAK,CAAC,cAAc,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAChC,OAAO;gBACL,IAAI,EAAE,gDAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC1B,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,oDAAS,CAAC,KAAK,CAAC,WAAW;gBACjD,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,oDAAS,CAAC,KAAK,CAAC,WAAW;aACtB,CAAC;QAChC,CAAC,CAAC,CACH,CACF,CACF,CAAC;IACJ,CAAC;IAEM,YAAY,CAAC,KAAc;QAChC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAC7B,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC;IAEM,aAAa,CAAC,KAAa;QAChC,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACrD,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACxC,OAAO,KAAK,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBACvF,OAAO;wBACL,IAAI,EAAE,gDAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;wBAC1B,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,oDAAS,CAAC,KAAK,CAAC,WAAW;wBACjD,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,oDAAS,CAAC,KAAK,CAAC,WAAW;qBACtB,CAAC;gBAChC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,aAAa;QAClB,MAAM,UAAU,GAAG,IAAI,GAAG,EAAU,CAAC;QAErC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;YAC/B,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;gBACrC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;aAC/B;SACF;QAED,OAAO,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;IAEM,aAAa,CAAC,GAAwB,EAAE,KAAK,GAAG,CAAC;QACtD,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACtD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9F,CAAC;IAEM,SAAS;QACd,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;QAE1F,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAEO,iBAAiB,CAAC,QAA6B,EAAE,KAAK,GAAG,CAAC;QAChE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;SACzB;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;YACnC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACrC;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;YAC/C,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SAC1C;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IAEO,WAAW,CAAC,QAA6B,EAAE,KAAK,GAAG,CAAC;QAC1D,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAChD,SAAS,KAAK,IAAI,QAAQ,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,EAAE,EAC5C,IAAI,CAAC,OAAO,EACZ,QAAQ,CAAC,CAAC,GAAG,oDAAS,CAAC,KAAK,CAAC,WAAW,GAAG,oDAAS,CAAC,KAAK,CAAC,OAAO,EAClE,QAAQ,CAAC,CAAC,GAAG,oDAAS,CAAC,KAAK,CAAC,WAAW,GAAG,oDAAS,CAAC,KAAK,CAAC,OAAO,CACnE,CAAC;QAEF,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACzC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEtB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;QAE7F,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QAEnD,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,gBAAgB,CAAC,KAAyB;QAChD,IAAI,SAAS,GAAW,IAAI,CAAC;QAC7B,IAAI,SAAoB,CAAC;QAEzB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,SAAS,GAAG,KAAK,CAAC;YAClB,SAAS,GAAG,8CAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SACnC;aAAM;YACL,SAAS,GAAG,QAAQ,CAAC;YACrB,SAAS,GAAG,KAAK,CAAC;SACnB;QAED,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;IAClC,CAAC;IAEO,aAAa,CAAC,GAAwB;QAC5C,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CACtC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,oDAAS,CAAC,KAAK,CAAC,OAAO,CAAC,EAC3C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,oDAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAC5C,CAAC;QAEF,MAAM,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;aACzC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;aAC1C,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAC/B,oDAAS,CAAC,KAAK,CAAC,OAAO,EACvB,oDAAS,CAAC,KAAK,CAAC,OAAO,CACxB,CAAC,CACH,CAAC;QAEF,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC;IAC/B,CAAC;CACF;;;;;;;;;;;;;ACzMD;AAAA;AAAO,MAAM,gBAAgB;IAC3B,YAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;IAAG,CAAC;IAE5C,IAAI,QAAQ;QACV,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAC5B,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAC3D,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;IAC1E,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC;IACd,CAAC;CACF;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AAET;AACA;AAG5C,MAAM,gBAAgB;IAiB3B,YACU,MAAuB,EACvB,UAAiB,EAClB,cAAsB,GAAG,EACzB,gBAAwB,WAAW,GAAG,IAAI,CAAC,KAAK,EAChD,WAAmB,EAAE;QAJpB,WAAM,GAAN,MAAM,CAAiB;QACvB,eAAU,GAAV,UAAU,CAAO;QAClB,gBAAW,GAAX,WAAW,CAAc;QACzB,kBAAa,GAAb,aAAa,CAAmC;QAChD,aAAQ,GAAR,QAAQ,CAAa;QArBtB,WAAM,GAAW,IAAI,CAAC;QAEb,oBAAe,GAAG,GAAG,CAAC,CAAC,KAAK;QAC5B,oBAAe,GAAG,KAAK,CAAC;QACjC,wBAAmB,GAAG,CAAC,CAAC;QAExB,kBAAa,GAA0B,IAAI,CAAC;QAC5C,iBAAY,GAAG,KAAK,CAAC;QACZ,qBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,gEAAS,CAAC,KAAK,CAAC,WAAW,EAAE,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvG,8BAAyB,GAAG,IAAI,CAAC,GAAG,CACnD,IAAI,CAAC,GAAG,CAAC,gEAAS,CAAC,KAAK,CAAC,WAAW,EAAE,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,GAAG,EAC1E,CAAC,CAAC,CAAC;QAEK,WAAM,GAAG,KAAK,CAAC;IAQpB,CAAC;IAEJ,IAAI,QAAQ;QAEV,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE;YAC3E,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAErC,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;aACxB;SACF;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEzG,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE;YACxD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;SACjC;aAAM,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE;YACrC,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;SACjC;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEhF,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,iBAAiB,CAAC,SAA8B;QACtD,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE;YACtF,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;QAED,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;iBACtC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAC9C,SAAS,EAAE,CAAC;SAChB;QAED,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,eAAe,CAAC;QAEjD,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,eAAe,EAAE;YAC3E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;YACvD,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;YAE7B,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;gBACvB,QAAQ,CAAC;aACV;SACF;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;SACjC;aAAM,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,yBAAyB,EAAE;YAClH,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAE3B,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;gBACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;aACjC;SACF;QAED,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;aAClD,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC9C,SAAS,EAAE,CAAC;IACjB,CAAC;IAEO,iBAAiB,CAAC,SAA8B;QACtD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;QAEnD,MAAM,eAAe,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAC7C,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,EAC7F,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAC9F,CAAC;QAEF,MAAM,eAAe,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAC7C,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,EAC5F,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAC7F,CAAC;QAEF,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAEpF,MAAM,MAAM,GAAe,EAAE,CAAC;QAE9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;YACpC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;gBACpC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CACvE,CAAC,GAAG,eAAe,CAAC,CAAC,EACrB,CAAC,GAAG,eAAe,CAAC,CAAC,CACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACb;SACF;QAED,MAAM,IAAI,GAAG,IAAI,kDAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjC,MAAM,MAAM,GAAG,IAAI,kDAAE,CAAC,WAAW,CAAC;YAChC,gBAAgB,EAAE,4DAAgB,CAAC,mBAAmB;YACtD,MAAM,EAAE,CAAC;YACT,SAAS,EAAE,kDAAE,CAAC,SAAS,CAAC,SAAS;SAClC,CAAC,CAAC;QAEH,IAAI,IAAgB,CAAC;QAErB,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CACvC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC,CAAC,EACrE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC,CAAC,CACtE,CAAC;QACF,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CACxC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC,CAAC,EACzE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC,CAAC,CAC1E,CAAC;QAEF,IAAI;YACF,IAAI,GAAG,MAAM,CAAC,QAAQ,CACpB,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,UAAU,CAAC,CAAC,EACZ,UAAU,CAAC,CAAC,EACZ,IAAI,CACL,CAAC;SACH;QAAC,WAAM;YACN,QAAQ,CAAC;SACV;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;SACjG;QAED,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC;SACb;QAED,IAAI,GAAG,kDAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAElC,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAC5C,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,EAC5D,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,CAC/D,CAAC,CAAC;IACL,CAAC;IAEO,YAAY;QAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/D,IAAI,QAAQ,GAAG,CAAC,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SAAE;QAExE,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAC5C,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EACpC,IAAI,CAAC,UAAU,CAAC,QAAQ;aACrB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,iFAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC;YACpE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW;YACjH,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC;aAClB,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CACO,CAAC;QAEnC,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,IAAI,CAAC;SACb;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,MAAM,CAAC,CAAC;QAEjF,IAAI,CAAC,YAAY,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;SAAE;QAEnF,OAAO,YAAY,CAAC;IACtB,CAAC;IAEO,UAAU,CAChB,GAAyB,EACzB,MAAkB,EAClB,IAAgB,EAChB,KAA0B,EAC1B,SAA8B,EAC9B,eAAoC;QACpC,GAAG,CAAC,KAAK,EAAE,CAAC;QAEZ,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACf,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAC1E,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC9E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAC9E,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAElF,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;YAExB,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;gBACtB,IAAI,KAAa,CAAC;gBAClB,QAAQ,IAAI,EAAE;oBACZ,KAAK,CAAC;wBACJ,KAAK,GAAG,QAAQ,CAAC;wBACjB,MAAM;oBACR,KAAK,CAAC;wBACJ,KAAK,GAAG,QAAQ,CAAC;wBACjB,MAAM;oBACR,KAAK,CAAC;wBACJ,KAAK,GAAG,QAAQ,CAAC;wBACjB,MAAM;oBACR,KAAK,CAAC;wBACJ,KAAK,GAAG,QAAQ,CAAC;wBACjB,MAAM;oBACR,KAAK,CAAC;wBACJ,KAAK,GAAG,QAAQ,CAAC;wBACjB,MAAM;iBACT;gBACD,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACrB,GAAG,CAAC,QAAQ,CACV,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,EACrD,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,GAAG,gEAAS,CAAC,KAAK,CAAC,WAAW,EACrD,gEAAS,CAAC,KAAK,CAAC,WAAW,EAC3B,gEAAS,CAAC,KAAK,CAAC,WAAW,CAC5B,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;ACxPD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEQ;AACH;AAGzC,MAAM,eAAe;IAe1B,YAAY,GAAoB;QAbzB,YAAO,GAAY,6DAAO,CAAC,MAAM,CAAC;QAW/B,eAAU,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAGzC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC;QAE7B,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IACxC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,MAAM,CAAC,GAAW;QAChB,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC;QAEnB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;YACpB,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAES,IAAI;QACZ,MAAM,YAAY,GAAG,gEAAS,CAAC,SAAS,CAAC,cAAc,CAAC;QACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,YAAY,GAAG,EAAE,CAAC,CAAC;QAChF,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,YAAY,GAAG,YAAY,CAAC,EAAE;YACtG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC;SAC5E;QACD,IAAI,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YACpB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IAES,SAAS,CAAC,SAAkB;QACpC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAES,mBAAmB;QAC3B,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAE3C,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAClB,IAAI,CAAC,WAAW,EAChB,CAAC,EAAE,CAAC,CACL,CAAC;IACJ,CAAC;CACF;;;;;;;;;;;;;AClFD;AAAA;AAAA;AAAqE;AAG9D,MAAM,cAAe,SAAQ,gEAAe;IAIjD,YAAY,GAAmB;QAC7B,KAAK,CAAC,GAAG,CAAC,CAAC;QAJL,UAAK,GAAU,IAAI,CAAC;QACpB,WAAM,GAAW,IAAI,CAAC;QAK5B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IAC3B,CAAC;IAEM,UAAU,CAAC,KAAY;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEM,MAAM;QACX,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAES,SAAS,CAAC,SAAkB;QACpC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC;IAES,mBAAmB;QAC3B,KAAK,CAAC,mBAAmB,EAAE,CAAC;QAE5B,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,UAAU,CAAC,IAAI,CAClB,IAAI,CAAC,KAAK,CAAC,OAAO,EAClB,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,EAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAC/B,CAAC;SACH;IACH,CAAC;CACF;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAAgD;AAEzC,MAAM,KAAM,SAAQ,4DAAa;IAGtC,YAAY,GAAgB;QAC1B,KAAK,CACH,GAAG,CAAC,IAAI,EACR,GAAG,CAAC,OAAO,EACX,GAAG,CAAC,WAAW,IAAI,iBAAiB,EACpC,GAAG,CAAC,KAAK,IAAI,CAAC,EACd,GAAG,CAAC,IAAI,IAAI,CAAC,EACb,GAAG,CAAC,KAAK,IAAI,CAAC,CACf,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;IAC7B,CAAC;CACF;;;;;;;;;;;;;ACfD;AAAA;AAAO,MAAM,aAAa;IACxB,YACS,IAAY,EACZ,OAAe,EACf,WAAmB,EACnB,KAAa,EACb,IAAY,EACZ,KAAa;QALb,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAQ;QACf,gBAAW,GAAX,WAAW,CAAQ;QACnB,UAAK,GAAL,KAAK,CAAQ;QACb,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;IACnB,CAAC;CACL;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACkC;AACH;;;AAGtF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,oGAAoB;KAChC;IACD;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iGAAmB;KAC/B;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACU;AACQ;AACJ;AACQ;AACJ;AACJ;AACA;AACe;AACT;AACG;AACH;AACA;AACN;AACE;AACE;AACF;AACF;AACuB;AACrB;AACQ;AACE;AACV;AACI;;AA+BpD,MAAM,eAAe;;8FAAf,eAAe;wJAAf,eAAe,kBA3BjB,EAAE;QAET,gEAAY;QACZ,2EAAgB;QAChB,wEAAe;QACf,0EAAgB;QAChB,oEAAa;QACb,oEAAa;QACb,qEAAa;QACb,oEAAa;QACb,2EAAgB;QAChB,uEAAc;QACd,wEAAe;QACf,mFAAoB;QACpB,yEAAe;QACf,uEAAc;QACd,4EAAiB;QACjB,qEAAa;QACb,8EAAiB;QACjB,4FAAwB;QACxB,uEAAc;QACd,+EAAkB;QAClB,uEAAc;QACd,iFAAmB;QACnB,2EAAmB;mIAGV,eAAe,cAzBxB,gEAAY;QACZ,2EAAgB;QAChB,wEAAe;QACf,0EAAgB;QAChB,oEAAa;QACb,oEAAa;QACb,qEAAa;QACb,oEAAa;QACb,2EAAgB;QAChB,uEAAc;QACd,wEAAe;QACf,mFAAoB;QACpB,yEAAe;QACf,uEAAc;QACd,4EAAiB;QACjB,qEAAa;QACb,8EAAiB;QACjB,4FAAwB;QACxB,uEAAc;QACd,+EAAkB;QAClB,uEAAc;QACd,iFAAmB;QACnB,2EAAmB;6FAGV,eAAe;cA5B3B,sDAAQ;eAAC;gBACR,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE;oBACP,gEAAY;oBACZ,2EAAgB;oBAChB,wEAAe;oBACf,0EAAgB;oBAChB,oEAAa;oBACb,oEAAa;oBACb,qEAAa;oBACb,oEAAa;oBACb,2EAAgB;oBAChB,uEAAc;oBACd,wEAAe;oBACf,mFAAoB;oBACpB,yEAAe;oBACf,uEAAc;oBACd,4EAAiB;oBACjB,qEAAa;oBACb,8EAAiB;oBACjB,4FAAwB;oBACxB,uEAAc;oBACd,+EAAkB;oBAClB,uEAAc;oBACd,iFAAmB;oBACnB,2EAAmB;iBACpB;aACF;;;;;;;;;;;;;;ACrDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AAEqC;AAC5B;AACJ;AAEnC,MAAM,WAAY,SAAQ,iDAAK;IAAtC;;QAEU,iBAAY,GAAG,IAAI,CAAC;IAyD9B,CAAC;IAvDC,MAAM;QACJ,IAAI,CAAC,aAAa,GAAG,IAAI,qFAAoB,EAAE,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;QAEnF,IAAI,CAAC,OAAO,GAAG,IAAI,qDAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAE5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACrF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAEvE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;QAE9E,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;YAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;QAEvC,MAAM,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,yDAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,EAC/E,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,yDAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAChF,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QAE5C,gEAAgE;QAEhE,IAAI,IAAI,CAAC,YAAY,EAAE;YAErB,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAwB,CAAC;YAEvG,MAAM,aAAa,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAC3C,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,yDAAS,CAAC,KAAK,CAAC,WAAW,CAAC,EACtD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,yDAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CACvD,CAAC;YAEF,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,cAAc,EAAE,EAAE;gBACrD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;oBAC3C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;iBACtD;aACF;iBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,EAAE,EAAE;gBAC7D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,EAAE;oBAC/C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;iBACzD;aACF;SACF;IACH,CAAC;IAEO,IAAI,CAAC,KAAa,EAAE,QAAgB;QAC1C,OAAO,KAAK,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC;IACpC,CAAC;CACF;;;;;;;;;;;;;ACjED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AAGoB;AAEjB;AACf;AAEZ;AACS;AAGS;AAEzC,MAAM,KAAM,SAAQ,4CAAK;IAY9B,YAAsB,YAA0B,EAAY,WAA+B;QACzF,KAAK,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC;QADJ,iBAAY,GAAZ,YAAY,CAAc;QAAY,gBAAW,GAAX,WAAW,CAAoB;QAVpF,aAAQ,GAAa,EAAE,CAAC;QACxB,YAAO,GAA6B,EAAE,CAAC;IAW9C,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,aAAa,GAAG,IAAI,qFAAoB,EAAE,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;QAEnF,IAAI,CAAC,OAAO,GAAG,IAAI,qDAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAE5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC3F,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAEvE,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAEpF,kDAAK,CAAC,KAAK,CAAC;aACT,SAAS,CAAC,GAAG,EAAE;YACd,OAAO,CAAC,UAAU,CAAC,IAAI,2DAAK,CAAC;gBAC3B,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,cAAc;aACxB,CAAC,CAAC,CAAC;YACJ,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,2DAAK,CAAC;YAC/B,IAAI,EAAE,cAAc;YACpB,OAAO,EAAE,cAAc;SACxB,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CACxC,CAAC,EAAE,CAAC,EACJ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,EAChC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,EACjC,SAAS,CACV,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;QAEnC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEpE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEzD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,yCAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,OAAO;QACL,oEAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEzC,oEAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1C,oEAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;QAEvC,IAAI,CAAC,eAAe,CAAC,WAAW,CAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EACnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CACpC,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,eAAe,CAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EACnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CACpC,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;IAC1C,CAAC;CACF;;;;;;;;;;;;;AChGD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,YAAY;IAChB,MAAM,CAAC,gBAAgB,CAAC,MAAkC;QAC/D,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,oCAAoC,CAAC,CAAC;QAC9D,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,yCAAyC,CAAC,CAAC;QACxE,MAAM,CAAC,KAAK,CAAC,eAAe,EAAE,0CAA0C,CAAC,CAAC;QAC1E,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,6CAA6C,CAAC,CAAC;IACzE,CAAC;IAEM,MAAM,CAAC,iBAAiB,CAAC,MAAkC;QAChE,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,uCAAuC,CAAC,CAAC;IACpE,CAAC;IAEM,MAAM,CAAC,gBAAgB,CAAC,MAAkC;QAC/D,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,8CAA8C,CAAC,CAAC;QAC7E,MAAM,CAAC,KAAK,CAAC,sBAAsB,EAAE,sDAAsD,CAAC,CAAC;IAC/F,CAAC;;wEAfU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIiC;AAC9B;AACH;AACiC;AAC9C;AACuC;;AAM9D,MAAM,oBAAoB;IAIxB,IAAI,CAAC,SAAoB,EAAE,UAAiB;QACjD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAEM,WAAW,CAAC,UAAkB,EAAE,QAA6B,EAAE,KAAa;QACjF,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CACzC,QAAQ,EACR,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CACrB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,KAAK,EACtD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,MAAM,CACxD,CACF,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAEd,UAAU,CAAC,IAAI;aACZ,OAAO,CAAC,yDAAS,CAAC,SAAS,CAAC,UAAU,EAAE,yDAAS,CAAC,SAAS,CAAC,UAAU,CAAC;aACvE,SAAS,CAAC,yDAAS,CAAC,SAAS,CAAC,iBAAiB,EAAE,yDAAS,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QAE3F,MAAM,MAAM,GAAG,IAAI,gFAAc,CAAC;YAChC,IAAI,EAAE,UAAU;YAChB,UAAU;YACV,SAAS,EAAE,GAAG;YACd,KAAK,EAAE,CAAC;YACR,KAAK;YACL,WAAW,EAAE,UAAU;SACxB,CAAC,CAAC;QAEH,MAAM,CAAC,UAAU,GAAG,IAAI,uFAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEzD,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE;YAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAE7D,IAAI,WAAW,IAAI,CAAC,EAAE;gBACpB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;aACjD;YAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEtC,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,YAAY,CAAC,QAA6B,EAAE,KAAa;QAC9D,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CACzC,QAAQ,EACR,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CACrB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,KAAK,EACtD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,MAAM,CACxD,CACF,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAEd,UAAU,CAAC,IAAI;aACZ,OAAO,CAAC,yDAAS,CAAC,SAAS,CAAC,UAAU,EAAE,yDAAS,CAAC,SAAS,CAAC,UAAU,CAAC;aACvE,SAAS,CAAC,yDAAS,CAAC,SAAS,CAAC,iBAAiB,EAAE,yDAAS,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QAE3F,MAAM,MAAM,GAAG,IAAI,gFAAc,CAAC;YAChC,IAAI,EAAE,SAAS;YACf,UAAU;YACV,SAAS,EAAE,GAAG;YACd,KAAK,EAAE,CAAC;YACR,KAAK;YACL,WAAW,EAAE,UAAU;SACxB,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,GAAG,sDAAO,CAAC,OAAO,CAAC;QACjC,MAAM,CAAC,UAAU,GAAG,IAAI,uFAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QAEvE,MAAM,SAAS,GAAG,IAAI,yCAAE,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACjE,MAAM,SAAS,GAAG,IAAI,yCAAE,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QAEtE,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE;YAC9B,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,SAAS,CAAC,OAAO,EAAE,CAAC;YAEpB,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAClE,IAAI,cAAc,IAAI,CAAC,EAAE;gBACvB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;aACnD;YAED,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAC9D,IAAI,UAAU,IAAI,CAAC,EAAE;gBACnB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;aAC/C;YAED,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC7D,IAAI,WAAW,IAAI,CAAC,EAAE;gBACpB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;aACjD;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEtC,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,sBAAsB,CAC5B,QAA6B,EAC7B,MAAc;QAEd,IAAI,UAA4E,CAAC;QAEjF,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CACrC,QAAQ,CAAC,CAAC,GAAG,yDAAS,CAAC,KAAK,CAAC,WAAW,EACxC,QAAQ,CAAC,CAAC,GAAG,yDAAS,CAAC,KAAK,CAAC,WAAW,EACxC,MAAM,CACA,CAAC;QAET,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC;IAEO,mBAAmB,CACzB,QAA6B,EAC7B,IAAyB;QAEzB,IAAI,UAAmF,CAAC;QAExF,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAC5C,QAAQ,CAAC,CAAC,GAAG,yDAAS,CAAC,KAAK,CAAC,WAAW,EACxC,QAAQ,CAAC,CAAC,GAAG,yDAAS,CAAC,KAAK,CAAC,WAAW,EACxC,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACA,CAAC;QAET,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC;IAEO,YAAY,CAClB,UAAoD;QAEpD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACjD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAClC,UAAU,EACV,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,YAAY,EAAE,CACvC,CAAC;QAEF,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,GAAG,IAAI,CAAC;QACzC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3C,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3C,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC;QAE5C,UAAU,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAEpC,OAAO,UAAU,CAAC;IACpB,CAAC;;wFAxJU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;6FAEP,oBAAoB;cAHhC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAA2C;;AAMpC,MAAM,YAAY;IAHzB;QAIU,WAAM,GAAG;YACf,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,GAAG;YACT,IAAI,EAAE,GAAG;YACT,KAAK,EAAE,GAAG;SACX,CAAC;KAUH;IARQ,YAAY,CAAC,QAA8C;QAChE,OAAO;YACL,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;YACnC,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACvC,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACvC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;SAC1C,CAAC;IACJ,CAAC;;wEAfU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAA2C;AAGD;;AAKnC,MAAM,kBAAkB;IACtB,WAAW,CAAC,KAAY;QAC7B,MAAM,QAAQ,GAAqC;YACjD,CAAC,EAAE,EAAE;SACN,CAAC;QAEF,KAAK,MAAM,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE;YACjD,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;gBACd,KAAK;gBACL,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,qDAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;aAClF,CAAC,CAAC;SACJ;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAEM,WAAW,CAAC,SAAiB,EAAE,KAAY;QAChD,MAAM,QAAQ,GAAqC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAEzE,KAAK,MAAM,KAAK,IAAI,QAAQ,CAAC,CAAC,EAAE;YAC9B,KAAK,MAAM,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;gBAC5B,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,qDAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACnG;SACF;IACH,CAAC;;oFAxBU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAiC;AACU;AAEpC,MAAM,YAAa,SAAQ,MAAM,CAAC,WAAW,CAAC,UAAU;IAY7D,YAAY,KAAY,EAAS,MAAuB,EAAS,gBAAgB,IAAI;QACnF,KAAK,CACH,KAAK,EACL,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EACjC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EACjC,KAAK,CACN,CAAC;QAN6B,WAAM,GAAN,MAAM,CAAiB;QAAS,kBAAa,GAAb,aAAa,CAAO;QAOnF,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAEvC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAgB,CAAC;QAC3D,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAgB,CAAC;QAE7D,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC;QACxC,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QAE/C,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAE3C,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEzB,IAAI,CAAC,aAAa,EAAE;YAClB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACvB,MAAM,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;YAEnC,sDAAS,CAAC,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC;iBACxC,IAAI,CAAC,gEAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;iBACjC,SAAS,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;YACL,sDAAS,CAAC,MAAM,CAAC,UAAU,EAAE,YAAY,CAAC;iBACvC,IAAI,CAAC,gEAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;iBACjC,SAAS,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,MAAM,CAAC,IAAY,EAAE,KAAa;QAChC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QACrD,IAAI,CAAC,WAAW,CACd,MAAM,CAAC,CAAC,EACR,MAAM,CAAC,CAAC,GAAG,EAAE,CACd,CAAC;IACJ,CAAC;;AAvDuB,wBAAW,GAAG;;;;;;;;;GASrC,CAAC;;;;;;;;;;;;;ACbJ;AAAA;AAAO,MAAM,eAAgB,SAAQ,MAAM,CAAC,WAAW,CAAC,UAAU;IAgDhE,YAAoB,UAAiB;QACnC,KAAK,CACH,UAAU,EACV,EAAE,EACF,EAAE,EACF,KAAK,CACN,CAAC;QANgB,eAAU,GAAV,UAAU,CAAO;QAOnC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAExB,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,MAAM,CAAC,IAAY,EAAE,KAAa;QAChC,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAEnC,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAgB,CAAC;QACrD,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;QAErF,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAgB,CAAC;QACxD,KAAK,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,SAAS,EAAE,CAAC;IACrD,CAAC;;AApEuB,2BAAW,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6CrC,CAAC;;;;;;;;;;;;;AC7CJ;AAAA;AAAO,MAAM,cAAe,SAAQ,MAAM,CAAC,WAAW,CAAC,UAAU;IAgB/D,YAAY,KAAY,EAAS,MAAuB;QACtD,KAAK,CACH,KAAK,EACL,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EACjC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EACjC,KAAK,CACN,CAAC;QAN6B,WAAM,GAAN,MAAM,CAAiB;QAOtD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAEzC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAE3C,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,MAAM,CAAC,IAAY,EAAE,KAAa;QAChC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC;QACxD,IAAI,CAAC,WAAW,CACd,MAAM,CAAC,CAAC,EACR,MAAM,CAAC,CAAC,GAAG,CAAC,CACb,CAAC;QAEF,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAgB,CAAC;QACrD,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;QAErG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;IAC5D,CAAC;;AA1CuB,0BAAW,GAAG;;;;;;;;;;;;;GAarC,CAAC;;;;;;;;;;;;;ACjBJ;AAAA;AAAA;AAAA;AAAA;AAAoD;AACF;AACJ;AAEvC,MAAM,EAAE,GAAG;IAChB,iFAAe;IACf,8EAAc;IACd,wEAAY;CACb,CAAC;;;;;;;;;;;;;ACRF;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './modules/app-routing.module';\r\nimport { AppComponent } from './components/app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialsModule } from './modules/materials.module';\r\nimport { GameCanvasComponent } from './components/game-canvas/game-canvas.component';\r\nimport { LevelEditorComponent } from './components/level-editor/level-editor.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GameCanvasComponent,\r\n    LevelEditorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","<div class='root-box'>\r\n  <div class='game-title'>\r\n    Generic RPG\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport Phaser from 'phaser';\r\nimport { InputService } from 'src/app/services/input.service';\r\nimport { Level } from 'src/app/scenes/levelScene';\r\nimport { LevelLoaderService } from 'src/app/services/level-loader.service';\r\nimport { Constants } from 'src/app/core/constants';\r\n\r\n@Component({\r\n  selector: 'app-game-canvas',\r\n  templateUrl: './game-canvas.component.html',\r\n  styleUrls: ['./game-canvas.component.scss']\r\n})\r\nexport class GameCanvasComponent implements OnInit {\r\n  phaserGame: Phaser.Game;\r\n  config: Phaser.Types.Core.GameConfig;\r\n  level: Level;\r\n\r\n  constructor(\r\n    private inputService: InputService,\r\n    private levelLoader: LevelLoaderService,\r\n    private ngZone: NgZone\r\n  ) {\r\n    this.level = new Level(inputService, levelLoader);\r\n\r\n    this.config = {\r\n      type: Phaser.AUTO,\r\n      height: Constants.Screen.SCREEN_H,\r\n      width: Constants.Screen.SCREEN_W,\r\n      scene: [ this.level ],\r\n      parent: 'gameContainer',\r\n      physics: {\r\n        default: 'arcade'\r\n      },\r\n      dom: {\r\n        createContainer: true\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.phaserGame = new Phaser.Game(this.config);\r\n    });\r\n  }\r\n\r\n  onExportLevel() {\r\n    console.log(this.levelLoader.exportLevel(this.level));\r\n  }\r\n\r\n  onImportLevel() {\r\n    const levelJson = prompt('Paste level JSON');\r\n\r\n    if (!levelJson) { return; }\r\n\r\n    this.levelLoader.importlevel(levelJson, this.level);\r\n  }\r\n}\r\n","<div class='root'>\r\n  <div id='gameContainer'></div>\r\n\r\n  <button mat-raised-button (click)=\"onExportLevel()\">Export level</button>\r\n  <button mat-raised-button (click)=\"onImportLevel()\">Import level</button>\r\n</div>\r\n\r\n","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { Level } from 'src/app/scenes/levelScene';\r\nimport { InputService } from 'src/app/services/input.service';\r\nimport { LevelLoaderService } from 'src/app/services/level-loader.service';\r\nimport { Constants } from 'src/app/core/constants';\r\nimport { LevelEditor } from 'src/app/scenes/levelEditor';\r\n\r\n@Component({\r\n  selector: 'app-level-editor',\r\n  templateUrl: './level-editor.component.html',\r\n  styleUrls: ['./level-editor.component.scss']\r\n})\r\nexport class LevelEditorComponent implements OnInit {\r\n  phaserGame: Phaser.Game;\r\n  config: Phaser.Types.Core.GameConfig;\r\n  level: Level;\r\n\r\n  constructor(\r\n    private inputService: InputService,\r\n    private levelLoader: LevelLoaderService,\r\n    private ngZone: NgZone\r\n  ) {\r\n    this.level = new LevelEditor(inputService, levelLoader);\r\n\r\n    this.config = {\r\n      type: Phaser.AUTO,\r\n      height: Constants.Screen.SCREEN_H,\r\n      width: Constants.Screen.SCREEN_W,\r\n      scene: [ this.level ],\r\n      parent: 'gameContainer',\r\n      physics: {\r\n        default: 'arcade'\r\n      },\r\n      disableContextMenu: true\r\n    };\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.phaserGame = new Phaser.Game(this.config);\r\n    });\r\n  }\r\n\r\n  onExportLevel() {\r\n    console.log(this.levelLoader.exportLevel(this.level));\r\n  }\r\n\r\n  onImportLevel() {\r\n    const levelJson = prompt('Paste level JSON');\r\n\r\n    if (!levelJson) { return; }\r\n\r\n    this.levelLoader.importlevel(levelJson, this.level);\r\n  }\r\n}\r\n","<div class='root'>\r\n  <div id='gameContainer'></div>\r\n\r\n  <button mat-raised-button (click)=\"onExportLevel()\">Export level</button>\r\n  <button mat-raised-button (click)=\"onImportLevel()\">Import level</button>\r\n</div>\r\n\r\n","export enum BlockType {\r\n  Background,\r\n  Foreground\r\n}\r\n\r\nexport interface BlockInfo {\r\n  type: BlockType;\r\n  texture: string;\r\n  z_index?: number;\r\n}\r\n\r\nexport const Blocks = new Map<string, BlockInfo>([\r\n  ['grass', {type: BlockType.Background, texture: 'grass01'}],\r\n  ['stone_floor', {type: BlockType.Background, texture: 'stone_floor01'}],\r\n  ['stone_bricks', {type: BlockType.Foreground, texture: 'stone_wall01'}],\r\n]) as ReadonlyMap<string, BlockInfo>;\r\n\r\nexport const BlockIds = Array.from(Blocks.keys());\r\n","class Screen {\r\n  static readonly SCREEN_W = 800;\r\n  static readonly SCREEN_H = 608;\r\n}\r\n\r\nclass Level {\r\n  static readonly GRID_SIZE_X = 32;\r\n  static readonly GRID_SIZE_Y = 32;\r\n  static readonly CHUNK_W = 32; // in tiles\r\n  static readonly CHUNK_H = 32; // in tiles\r\n}\r\n\r\nclass Character {\r\n  static readonly MAX_SPEED_MULT = 5;\r\n  static readonly COLLIDER_W = 20;\r\n  static readonly COLLIDER_H = 20;\r\n  static readonly COLLIDER_OFFSET_X = 1;\r\n  static readonly COLLIDER_OFFSET_Y = 7;\r\n}\r\n\r\nexport const Constants = {\r\n  Screen,\r\n  Level,\r\n  Character\r\n};\r\n","export enum Faction {\r\n  Player,\r\n  Baddies\r\n}\r\n\r\nexport function FactionsAreFriendly(fac1: Faction, fac2: Faction): boolean {\r\n  if (fac1 === fac2) { return true; }\r\n\r\n  return false;\r\n}\r\n","import { Tilemaps } from 'phaser';\r\nimport { BlockInfo, Blocks, BlockIds, BlockType } from './blocks';\r\nimport { LevelSerialization } from '../models/levelSerialization.model';\r\nimport { Constants } from './constants';\r\nimport { Level } from '../scenes/levelScene';\r\n\r\nexport class MapGrid {\r\n  private tileMap: Tilemaps.Tilemap;\r\n  private chunks: Tilemaps.DynamicTilemapLayer[][][] = [];\r\n  private collidingBlocks: number[];\r\n\r\n  constructor(private levelScene: Level, private tileSet: string) {\r\n    this.tileMap = levelScene.make.tilemap({\r\n      width: Constants.Level.CHUNK_W,\r\n      height: Constants.Level.CHUNK_H,\r\n      tileWidth: Constants.Level.GRID_SIZE_X,\r\n      tileHeight: Constants.Level.GRID_SIZE_Y\r\n    });\r\n\r\n    this.tileMap.addTilesetImage(tileSet, tileSet,\r\n      Constants.Level.GRID_SIZE_X,\r\n      Constants.Level.GRID_SIZE_Y,\r\n      1, 2);\r\n\r\n    this.collidingBlocks = Array.from(Blocks.entries())\r\n      .filter(e => e[1].type === BlockType.Foreground)\r\n      .map(e => BlockIds.indexOf(e[0]));\r\n  }\r\n\r\n  public addBlock(pos: Phaser.Math.Vector2, block: string | BlockInfo, layer = 0) {\r\n    const { blockName, blockData } = this.resolveBlockInfo(block);\r\n\r\n    const { chunkPos, tilePos } = this.localizeChunk(pos);\r\n\r\n    // const chunkPos = new Phaser.Math.Vector2(\r\n    //   Math.floor(pos.x / Constants.Level.CHUNK_W),\r\n    //   Math.floor(pos.y / Constants.Level.CHUNK_H)\r\n    // );\r\n\r\n    const chunk = this.ensureChunkExists(chunkPos, layer);\r\n\r\n    // const tilePosInChunk = new Phaser.Math.Vector2(pos)\r\n    //   .subtract(new Phaser.Math.Vector2(chunkPos)\r\n    //     .multiply(new Phaser.Math.Vector2(\r\n    //       Constants.Level.CHUNK_W,\r\n    //       Constants.Level.CHUNK_H\r\n    //     ))\r\n    //   );\r\n\r\n    chunk.putTileAt(\r\n      BlockIds.indexOf(blockName),\r\n      tilePos.x,\r\n      tilePos.y\r\n    );\r\n  }\r\n\r\n  public fillArea(pos: Phaser.Math.Vector2, size: Phaser.Math.Vector2, block: string | BlockInfo, layer = 0) {\r\n    const lowerCorner = new Phaser.Math.Vector2(pos).add(size);\r\n    for (let i = pos.x; i <= lowerCorner.x; ++i) {\r\n      for (let j = pos.y; j <= lowerCorner.y; ++j) {\r\n        this.addBlock(new Phaser.Math.Vector2(i, j), block, layer);\r\n      }\r\n    }\r\n  }\r\n\r\n  public getBlockAt(pos: Phaser.Math.Vector2, layer = 0): string {\r\n    // TODO: rewrite this and the rest to return indices instead in order to optimize level exports\r\n    const { chunkPos, tilePos } = this.localizeChunk(pos);\r\n    if (!this.chunks[layer] ||\r\n      !this.chunks[layer][chunkPos.x] ||\r\n      !this.chunks[layer][chunkPos.x][chunkPos.y]) {\r\n      return null;\r\n    }\r\n    const tile = this.chunks[layer][chunkPos.x][chunkPos.y].getTileAt(tilePos.x, tilePos.y);\r\n    if (!tile) { return null; }\r\n    return BlockIds[tile.index];\r\n  }\r\n\r\n  public getAll(): LevelSerialization.Block[] {\r\n    return this.chunks.flatMap(x =>\r\n      x.flatMap(y =>\r\n        y.flatMap(chunk =>\r\n          chunk.getTilesWithin().map(tile => {\r\n            return {\r\n              name: BlockIds[tile.index],\r\n              x: tile.x + chunk.x / Constants.Level.GRID_SIZE_X,\r\n              y: tile.y + chunk.y / Constants.Level.GRID_SIZE_Y\r\n            } as LevelSerialization.Block;\r\n          })\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  public getAllChunks(layer?: number): Tilemaps.DynamicTilemapLayer[] {\r\n    if (!layer) {\r\n      return this.chunks.flatMap(L =>\r\n        L.flatMap(row => row));\r\n    }\r\n    return this.chunks[layer].flatMap(row => row);\r\n  }\r\n\r\n  public getAllOfLayer(layer: number): LevelSerialization.Block[] {\r\n    return Object.values(this.chunks[layer]).flatMap(row => {\r\n      return Object.values(row).flatMap(chunk => {\r\n        return chunk.getTilesWithin(0, 0, undefined, undefined, { isNotEmpty: true }).map(tile => {\r\n          return {\r\n            name: BlockIds[tile.index],\r\n            x: tile.x + chunk.x / Constants.Level.GRID_SIZE_X,\r\n            y: tile.y + chunk.y / Constants.Level.GRID_SIZE_Y\r\n          } as LevelSerialization.Block;\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  public getUsedLayers(): number[] {\r\n    const usedLayers = new Set<number>();\r\n\r\n    for (const layer in this.chunks) {\r\n      if (this.chunks.hasOwnProperty(layer)) {\r\n        usedLayers.add(Number(layer));\r\n      }\r\n    }\r\n\r\n    return Array.from(usedLayers);\r\n  }\r\n\r\n  public removeBlockAt(pos: Phaser.Math.Vector2, layer = 0) {\r\n    const { chunkPos, tilePos } = this.localizeChunk(pos);\r\n    const chunk = this.chunks[layer][chunkPos.x][chunkPos.y].removeTileAt(tilePos.x, tilePos.y);\r\n  }\r\n\r\n  public clearGrid() {\r\n    this.chunks.forEach(layer => layer.forEach(row => row.forEach(chunk => chunk.destroy())));\r\n\r\n    this.chunks = [];\r\n  }\r\n\r\n  private ensureChunkExists(chunkPos: Phaser.Math.Vector2, layer = 0): Tilemaps.DynamicTilemapLayer {\r\n    if (!this.chunks[layer]) {\r\n      this.chunks[layer] = [];\r\n    }\r\n\r\n    if (!this.chunks[layer][chunkPos.x]) {\r\n      this.chunks[layer][chunkPos.x] = [];\r\n    }\r\n\r\n    if (!this.chunks[layer][chunkPos.x][chunkPos.y]) {\r\n      return this.createChunk(chunkPos, layer);\r\n    }\r\n\r\n    return this.chunks[layer][chunkPos.x][chunkPos.y];\r\n  }\r\n\r\n  private createChunk(chunkPos: Phaser.Math.Vector2, layer = 0): Tilemaps.DynamicTilemapLayer {\r\n    const chunk = this.tileMap.createBlankDynamicLayer(\r\n      `chunk_${layer}_${chunkPos.x}_${chunkPos.y}`,\r\n      this.tileSet,\r\n      chunkPos.x * Constants.Level.GRID_SIZE_X * Constants.Level.CHUNK_W,\r\n      chunkPos.y * Constants.Level.GRID_SIZE_Y * Constants.Level.CHUNK_H\r\n    );\r\n\r\n    chunk.setCollision(this.collidingBlocks);\r\n    chunk.setDepth(layer);\r\n\r\n    this.levelScene.physics.add.collider(this.levelScene.entities.map(e => e.gameObject), chunk);\r\n\r\n    this.chunks[layer][chunkPos.x][chunkPos.y] = chunk;\r\n\r\n    return chunk;\r\n  }\r\n\r\n  private resolveBlockInfo(block: string | BlockInfo): { blockName: string, blockData: BlockInfo } {\r\n    let blockName: string = null;\r\n    let blockData: BlockInfo;\r\n\r\n    if (typeof block === 'string') {\r\n      blockName = block;\r\n      blockData = Blocks.get(blockName);\r\n    } else {\r\n      blockName = 'custom';\r\n      blockData = block;\r\n    }\r\n\r\n    return { blockName, blockData };\r\n  }\r\n\r\n  private localizeChunk(pos: Phaser.Math.Vector2): { chunkPos: Phaser.Math.Vector2, tilePos: Phaser.Math.Vector2 } {\r\n    const chunkPos = new Phaser.Math.Vector2(\r\n      Math.floor(pos.x / Constants.Level.CHUNK_W),\r\n      Math.floor(pos.y / Constants.Level.CHUNK_H)\r\n    );\r\n\r\n    const tilePos = new Phaser.Math.Vector2(pos)\r\n      .subtract(new Phaser.Math.Vector2(chunkPos)\r\n      .multiply(new Phaser.Math.Vector2(\r\n        Constants.Level.CHUNK_W,\r\n        Constants.Level.CHUNK_H\r\n      ))\r\n    );\r\n\r\n    return { chunkPos, tilePos };\r\n  }\r\n}\r\n","import { Controller } from './baseController';\r\nimport { InputKeys } from 'src/app/models/inputKeys.model';\r\n\r\nexport class PlayerController implements Controller {\r\n  constructor(private inputKeys: InputKeys) {}\r\n\r\n  get movement(): Phaser.Math.Vector2 {\r\n    return new Phaser.Math.Vector2(\r\n      -this.inputKeys.left.isDown || +this.inputKeys.right.isDown,\r\n      -this.inputKeys.up.isDown || +this.inputKeys.down.isDown).normalize();\r\n  }\r\n\r\n  get attack(): Phaser.Math.Vector2 {\r\n    return null;\r\n  }\r\n}\r\n","import { Controller } from './baseController';\r\nimport { Level } from 'src/app/scenes/levelScene';\r\nimport { CharacterEntity } from '../entities/characterEntity';\r\nimport { FactionsAreFriendly } from 'src/app/core/factions';\r\nimport { Entity } from '../entities/baseEntity';\r\nimport PF, { DiagonalMovement } from 'pathfinding';\r\nimport { Constants } from 'src/app/core/constants';\r\nimport { GameObjects } from 'phaser';\r\n\r\nexport class WalkerController implements Controller {\r\n  private target: Entity = null;\r\n\r\n  private readonly searchFrequency = 250; // ms\r\n  private readonly searchIncrement = 16.67;\r\n  private timeSinceLastSearch = 0;\r\n\r\n  private pathWaypoints: Phaser.Math.Vector2[] = null;\r\n  private rushAtTarget = false;\r\n  private readonly unrushDistanceSq = Math.pow(Math.min(Constants.Level.GRID_SIZE_Y, Constants.Level.GRID_SIZE_X) * 2, 2);\r\n\r\n  private readonly waypointReachedDistanceSq = Math.pow(\r\n    Math.min(Constants.Level.GRID_SIZE_X, Constants.Level.GRID_SIZE_Y) * 0.7,\r\n  2);\r\n\r\n  private _DEBUG = false;\r\n\r\n  constructor(\r\n    private myself: CharacterEntity,\r\n    private levelScene: Level,\r\n    public aggroRadius: number = 256,\r\n    public unaggroRadius: number = aggroRadius * Math.SQRT2,\r\n    public minRange: number = 64\r\n  ) {}\r\n\r\n  get movement(): Phaser.Math.Vector2 {\r\n\r\n    if (!this.target || !this.target.gameObject || !this.target.gameObject.body) {\r\n      const searched = this.searchTarget();\r\n\r\n      if (!searched) {\r\n        return Phaser.Math.Vector2.ZERO;\r\n      } else {\r\n        this.target = searched;\r\n      }\r\n    }\r\n\r\n    const distanceSq = this.myself.gameObject.body.position.distanceSq(this.target.gameObject.body.position);\r\n\r\n    if (distanceSq > this.unaggroRadius * this.unaggroRadius) {\r\n      this.target = null;\r\n      return Phaser.Math.Vector2.ZERO;\r\n    } else if (distanceSq < this.minRange) {\r\n      return Phaser.Math.Vector2.ZERO;\r\n    }\r\n\r\n    const moveVector = this.calculateMovement(this.target.gameObject.body.position);\r\n\r\n    return moveVector;\r\n  }\r\n\r\n  get attack(): Phaser.Math.Vector2 {\r\n    return null;\r\n  }\r\n\r\n  private calculateMovement(targetPos: Phaser.Math.Vector2): Phaser.Math.Vector2 {\r\n    if (this.myself.gameObject.body.position.distanceSq(targetPos) > this.unrushDistanceSq) {\r\n      this.rushAtTarget = false;\r\n    }\r\n\r\n    if (this.rushAtTarget) {\r\n      return new Phaser.Math.Vector2(targetPos)\r\n        .subtract(this.myself.gameObject.body.position)\r\n        .normalize();\r\n    }\r\n\r\n    this.timeSinceLastSearch += this.searchIncrement;\r\n\r\n    if (!this.pathWaypoints || this.timeSinceLastSearch >= this.searchFrequency) {\r\n      this.pathWaypoints = this.buildPathToTarget(targetPos);\r\n      this.timeSinceLastSearch = 0;\r\n\r\n      if (!this.pathWaypoints) {\r\n        debugger;\r\n      }\r\n    }\r\n\r\n    if (this.pathWaypoints.length === 0) {\r\n      this.rushAtTarget = true;\r\n      return Phaser.Math.Vector2.ZERO;\r\n    } else if (this.pathWaypoints[0].distanceSq(this.myself.gameObject.body.position) < this.waypointReachedDistanceSq) {\r\n      this.pathWaypoints.shift();\r\n\r\n      if (this.pathWaypoints.length === 0) {\r\n        this.rushAtTarget = true;\r\n        return Phaser.Math.Vector2.ZERO;\r\n      }\r\n    }\r\n\r\n    return new Phaser.Math.Vector2(this.pathWaypoints[0])\r\n      .subtract(this.myself.gameObject.body.position)\r\n      .normalize();\r\n  }\r\n\r\n  private buildPathToTarget(targetPos: Phaser.Math.Vector2): Phaser.Math.Vector2[] {\r\n    const myPos = this.myself.gameObject.body.position;\r\n\r\n    const gridLowerCorner = new Phaser.Math.Vector2(\r\n      Math.floor((Math.min(myPos.x, targetPos.x) - this.aggroRadius) / Constants.Level.GRID_SIZE_X),\r\n      Math.floor((Math.min(myPos.y, targetPos.y) - this.aggroRadius) / Constants.Level.GRID_SIZE_Y)\r\n    );\r\n\r\n    const gridUpperCorner = new Phaser.Math.Vector2(\r\n      Math.ceil((Math.max(myPos.x, targetPos.x) + this.aggroRadius) / Constants.Level.GRID_SIZE_X),\r\n      Math.ceil((Math.max(myPos.y, targetPos.y) + this.aggroRadius) / Constants.Level.GRID_SIZE_Y)\r\n    );\r\n\r\n    const gridSize = new Phaser.Math.Vector2(gridUpperCorner).subtract(gridLowerCorner);\r\n\r\n    const matrix: number[][] = [];\r\n\r\n    for (let i = 0; i <= gridSize.y; ++i) {\r\n      matrix.push([]);\r\n\r\n      for (let j = 0; j <= gridSize.x; ++j) {\r\n        matrix[i].push(this.levelScene.mapGrid.getBlockAt(new Phaser.Math.Vector2(\r\n          j + gridLowerCorner.x,\r\n          i + gridLowerCorner.y\r\n        )) ? 1 : 0);\r\n      }\r\n    }\r\n\r\n    const grid = new PF.Grid(matrix);\r\n    const finder = new PF.AStarFinder({\r\n      diagonalMovement: DiagonalMovement.IfAtMostOneObstacle,\r\n      weight: 1,\r\n      heuristic: PF.Heuristic.euclidean\r\n    });\r\n\r\n    let path: number[][];\r\n\r\n    const pathStart = new Phaser.Math.Vector2(\r\n      Math.round(myPos.x / Constants.Level.GRID_SIZE_X) - gridLowerCorner.x,\r\n      Math.round(myPos.y / Constants.Level.GRID_SIZE_Y) - gridLowerCorner.y\r\n    );\r\n    const pathFinish = new Phaser.Math.Vector2(\r\n      Math.round(targetPos.x / Constants.Level.GRID_SIZE_X) - gridLowerCorner.x,\r\n      Math.round(targetPos.y / Constants.Level.GRID_SIZE_Y) - gridLowerCorner.y\r\n    );\r\n\r\n    try {\r\n      path = finder.findPath(\r\n        pathStart.x,\r\n        pathStart.y,\r\n        pathFinish.x,\r\n        pathFinish.y,\r\n        grid\r\n      );\r\n    } catch {\r\n      debugger;\r\n    }\r\n\r\n    if (this._DEBUG) {\r\n      this._drawDebug(this.levelScene.debugGraphics, matrix, path, myPos, targetPos, gridLowerCorner);\r\n    }\r\n\r\n    if (!path) {\r\n      return null;\r\n    }\r\n\r\n    path = PF.Util.compressPath(path);\r\n\r\n    return path.map(point => new Phaser.Math.Vector2(\r\n        (point[0] + gridLowerCorner.x) * Constants.Level.GRID_SIZE_X,\r\n        (point[1] + gridLowerCorner.y) * Constants.Level.GRID_SIZE_Y\r\n    ));\r\n  }\r\n\r\n  private searchTarget(): Entity {\r\n    const myNumber = this.levelScene.entities.indexOf(this.myself);\r\n    if (myNumber < 0) { throw new Error('I am not on the entities list!'); }\r\n\r\n    const target = this.levelScene.physics.closest(\r\n      this.myself.gameObject.body.position,\r\n      this.levelScene.entities\r\n        .filter((e, i) => !FactionsAreFriendly(this.myself.faction, e.faction) &&\r\n          e.gameObject.body.position.distanceSq(this.myself.gameObject.body.position) < this.aggroRadius * this.aggroRadius &&\r\n          (myNumber !== i))\r\n        .map(e => e.gameObject)\r\n    ) as Phaser.GameObjects.GameObject;\r\n\r\n    if (!target) {\r\n      return null;\r\n    }\r\n\r\n    const targetEntity = this.levelScene.entities.find(e => e.gameObject === target);\r\n\r\n    if (!targetEntity) { throw new Error('Entity for closest GameObject not found!'); }\r\n\r\n    return targetEntity;\r\n  }\r\n\r\n  private _drawDebug(\r\n    gfx: GameObjects.Graphics,\r\n    matrix: number[][],\r\n    path: number[][],\r\n    myPos: Phaser.Math.Vector2,\r\n    targetPos: Phaser.Math.Vector2,\r\n    gridLowerCorner: Phaser.Math.Vector2) {\r\n    gfx.clear();\r\n\r\n    path.forEach(p => {\r\n      matrix[p[1]][p[0]] = 4;\r\n    });\r\n\r\n    matrix[Math.round(myPos.y / Constants.Level.GRID_SIZE_Y) - gridLowerCorner.y]\r\n      [Math.round(myPos.x / Constants.Level.GRID_SIZE_X) - gridLowerCorner.x] = 2;\r\n    matrix[Math.round(targetPos.y / Constants.Level.GRID_SIZE_Y) - gridLowerCorner.y]\r\n      [Math.round(targetPos.x / Constants.Level.GRID_SIZE_X) - gridLowerCorner.x] = 3;\r\n\r\n    matrix.forEach((row, i) => {\r\n\r\n      row.forEach((cell, j) => {\r\n        let color: number;\r\n        switch (cell) {\r\n          case 0:\r\n            color = 0x00ff00;\r\n            break;\r\n          case 1:\r\n            color = 0x00ffff;\r\n            break;\r\n          case 2:\r\n            color = 0xff00ff;\r\n            break;\r\n          case 3:\r\n            color = 0xffaa00;\r\n            break;\r\n          case 4:\r\n            color = 0x000000;\r\n            break;\r\n        }\r\n        gfx.fillStyle(color);\r\n        gfx.fillRect(\r\n          (j + gridLowerCorner.x) * Constants.Level.GRID_SIZE_X,\r\n          (i + gridLowerCorner.y) * Constants.Level.GRID_SIZE_Y,\r\n          Constants.Level.GRID_SIZE_X,\r\n          Constants.Level.GRID_SIZE_Y\r\n        );\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Entity, Controllable, Destroyable } from './baseEntity';\r\nimport { GameObjects } from 'phaser';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Controller } from '../controllers/baseController';\r\nimport { Constants } from 'src/app/core/constants';\r\nimport { Faction } from 'src/app/core/factions';\r\n\r\n\r\nexport class CharacterEntity implements Entity, Controllable, Destroyable {\r\n  public entityName: string;\r\n  public faction: Faction = Faction.Player;\r\n\r\n  public gameObject: GameObjects.RenderTexture & { body: Phaser.Physics.Arcade.Body };\r\n  protected bodyTexture: string;\r\n\r\n  public maxHealth: number;\r\n  public health: number;\r\n  public level: number;\r\n  public speed: number;\r\n\r\n  public controller: Controller;\r\n  protected destroyed$ = new Subject<void>();\r\n\r\n  constructor(cfg: CharacterConfig) {\r\n    this.entityName = cfg.name;\r\n    this.gameObject = cfg.gameObject;\r\n    this.bodyTexture = cfg.bodyTexture;\r\n    this.maxHealth = cfg.maxHealth || 100;\r\n    this.health = this.maxHealth;\r\n    this.level = cfg.level || 1;\r\n    this.speed = cfg.speed || 20;\r\n\r\n    this.refreshRenderSprite();\r\n  }\r\n\r\n  get destroyed(): Observable<void> {\r\n    return this.destroyed$.asObservable();\r\n  }\r\n\r\n  update() {\r\n    this.move();\r\n  }\r\n\r\n  damage(dmg: number): void {\r\n    this.health -= dmg;\r\n\r\n    if (this.health <= 0) {\r\n      this.destroy();\r\n    }\r\n  }\r\n\r\n  destroy(): void {\r\n    this.gameObject.destroy();\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  protected move() {\r\n    const maxSpeedMult = Constants.Character.MAX_SPEED_MULT;\r\n    const movement = this.controller.movement.scale(this.speed * maxSpeedMult * 10);\r\n    if (this.gameObject.body.velocity.lengthSq() > (this.speed * this.speed * maxSpeedMult * maxSpeedMult)) {\r\n      this.gameObject.body.velocity.normalize().scale(this.speed * maxSpeedMult);\r\n    }\r\n    if (movement.x !== 0) {\r\n      this.lookRight(movement.x > 0);\r\n    }\r\n    this.gameObject.body.setAcceleration(movement.x, movement.y);\r\n  }\r\n\r\n  protected lookRight(condition: boolean) {\r\n    this.gameObject.setFlipX(condition);\r\n  }\r\n\r\n  protected refreshRenderSprite() {\r\n    const bounds = this.gameObject.body.center;\r\n\r\n    this.gameObject.clear();\r\n    this.gameObject.draw(\r\n      this.bodyTexture,\r\n      0, 0\r\n    );\r\n  }\r\n}\r\n\r\nexport interface CharacterConfig {\r\n  name: string;\r\n  gameObject: Phaser.GameObjects.RenderTexture & { body: Phaser.Physics.Arcade.Body };\r\n  bodyTexture: string;\r\n  maxHealth?: number;\r\n  level?: number;\r\n  speed?: number;\r\n}\r\n","import { CharacterEntity, CharacterConfig } from './characterEntity';\r\nimport { Armor } from '../items/armor';\r\n\r\nexport class HumanoidEntity extends CharacterEntity {\r\n  private armor: Armor = null;\r\n  private weapon: string = null;\r\n\r\n  constructor(cfg: HumanoidConfig) {\r\n    super(cfg);\r\n\r\n    this.equipArmor(cfg.armor);\r\n    this.weapon = cfg.weapon;\r\n  }\r\n\r\n  public equipArmor(armor: Armor) {\r\n    this.armor = armor;\r\n    console.log('equip called');\r\n\r\n    this.refreshRenderSprite();\r\n  }\r\n\r\n  public update() {\r\n    super.update();\r\n  }\r\n\r\n  protected lookRight(condition: boolean) {\r\n    super.lookRight(condition);\r\n  }\r\n\r\n  protected refreshRenderSprite() {\r\n    super.refreshRenderSprite();\r\n\r\n    if (this.armor) {\r\n      this.gameObject.draw(\r\n        this.armor.texture,\r\n        this.gameObject.width / 2 - 9,\r\n        this.gameObject.height / 2 - 5\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport interface HumanoidConfig extends CharacterConfig {\r\n  armor?: Armor;\r\n  weapon?: string;\r\n}\r\n","import { EquipmentItem } from './equipmentItem';\r\n\r\nexport class Armor extends EquipmentItem {\r\n  public texture: string;\r\n\r\n  constructor(cfg: ArmorConfig) {\r\n    super(\r\n      cfg.name,\r\n      cfg.texture,\r\n      cfg.description || 'No information.',\r\n      cfg.price || 0,\r\n      cfg.mass || 0,\r\n      cfg.level || 1\r\n    );\r\n\r\n    this.texture = cfg.texture;\r\n  }\r\n}\r\n\r\ninterface ArmorConfig {\r\n  name: string;\r\n  texture: string;\r\n  description?: string;\r\n  price?: number;\r\n  mass?: number;\r\n  level?: number;\r\n  armor?: number;\r\n}\r\n","import { Item } from './baseItem';\r\n\r\nexport class EquipmentItem implements Item {\r\n  constructor(\r\n    public name: string,\r\n    public texture: string,\r\n    public description: string,\r\n    public price: number,\r\n    public mass: number,\r\n    public level: number\r\n  ) {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LevelEditorComponent } from '../components/level-editor/level-editor.component';\r\nimport { GameCanvasComponent } from '../components/game-canvas/game-canvas.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'editor',\r\n    component: LevelEditorComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: GameCanvasComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {NgModule} from '@angular/core';\r\nimport {LayoutModule} from '@angular/cdk/layout';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\n\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatBadgeModule,\r\n    MatExpansionModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n  ]\r\n})\r\nexport class MaterialsModule {\r\n}\r\n","import { Level } from './levelScene';\r\nimport { GameObjects } from 'phaser';\r\nimport { EntitySpawnerService } from '../services/entity-spawner.service';\r\nimport { Constants } from '../core/constants';\r\nimport { MapGrid } from '../core/mapGrid';\r\n\r\nexport class LevelEditor extends Level {\r\n  private grid: GameObjects.Grid;\r\n  private cursorActive = true;\r\n\r\n  create() {\r\n    this.entitySpawner = new EntitySpawnerService();\r\n    this.entitySpawner.init(this.inputService.getInputKeys(this.input.keyboard), this);\r\n\r\n    this.mapGrid = new MapGrid(this, 'tileset');\r\n\r\n    this.player = this.entitySpawner.spawnPlayer('Editor', Phaser.Math.Vector2.ZERO, 60);\r\n    this.cameras.main.startFollow(this.player.gameObject, false, 0.1, 0.1);\r\n\r\n    this.grid = this.add.grid(0, 0, 900, 708, 32, 32, 0x000000, 0, 0xffffff, 0.5);\r\n\r\n    this.input.on('gameout', () => {\r\n      this.cursorActive = false;\r\n    });\r\n    this.input.on('gameover', () => {\r\n      this.cursorActive = true;\r\n    });\r\n  }\r\n\r\n  update() {\r\n    this.entities.forEach(e => e.update());\r\n\r\n    const gridPos = new Phaser.Math.Vector2 (\r\n      this.snap(this.cameras.main.worldView.centerX, Constants.Level.GRID_SIZE_X) + 2,\r\n      this.snap(this.cameras.main.worldView.centerY, Constants.Level.GRID_SIZE_Y) + 2\r\n    );\r\n\r\n    this.grid.setPosition(gridPos.x, gridPos.y);\r\n\r\n    // this.input.activePointer.updateWorldPoint(this.cameras.main);\r\n\r\n    if (this.cursorActive) {\r\n\r\n      const worldPoint = this.input.activePointer.positionToCamera(this.cameras.main) as Phaser.Math.Vector2;\r\n\r\n      const placePosition = new Phaser.Math.Vector2(\r\n        Math.floor(worldPoint.x / Constants.Level.GRID_SIZE_X),\r\n        Math.floor(worldPoint.y / Constants.Level.GRID_SIZE_Y)\r\n      );\r\n\r\n      if (this.input.manager.activePointer.leftButtonDown()) {\r\n        if (!this.mapGrid.getBlockAt(placePosition)) {\r\n          this.mapGrid.addBlock(placePosition, 'stone_bricks');\r\n        }\r\n      } else if (this.input.manager.activePointer.rightButtonDown()) {\r\n        if (!this.mapGrid.getBlockAt(placePosition, -1)) {\r\n          this.mapGrid.addBlock(placePosition, 'stone_floor', -1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private snap(value: number, snapSize: number) {\r\n    return value - (value % snapSize);\r\n  }\r\n}\r\n","import { Scene, GameObjects, Tilemaps } from 'phaser';\r\nimport { InputService } from '../services/input.service';\r\nimport { Entity } from '../gameplay/entities/baseEntity';\r\nimport { EntitySpawnerService } from '../services/entity-spawner.service';\r\nimport { CharacterEntity } from '../gameplay/entities/characterEntity';\r\nimport { AssetService } from '../services/asset.service';\r\nimport { MapGrid } from '../core/mapGrid';\r\nimport { LevelLoaderService } from '../services/level-loader.service';\r\nimport { UI } from '../ui/ui';\r\nimport { interval, timer } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { HumanoidEntity } from '../gameplay/entities/humanoidEntity';\r\nimport { Armor } from '../gameplay/items/armor';\r\n\r\nexport class Level extends Scene {\r\n  public mapGrid: MapGrid;\r\n  public entities: Entity[] = [];\r\n  public levelUI: GameObjects.DOMElement[] = [];\r\n  public player: HumanoidEntity;\r\n\r\n  public debugGraphics: GameObjects.Graphics;\r\n\r\n  protected entitySpawner: EntitySpawnerService;\r\n\r\n  protected backgroundImage: GameObjects.TileSprite;\r\n\r\n  constructor(protected inputService: InputService, protected levelLoader: LevelLoaderService) {\r\n    super({ key: 'level' });\r\n  }\r\n\r\n  create() {\r\n    this.entitySpawner = new EntitySpawnerService();\r\n    this.entitySpawner.init(this.inputService.getInputKeys(this.input.keyboard), this);\r\n\r\n    this.mapGrid = new MapGrid(this, 'tileset');\r\n\r\n    this.player = this.entitySpawner.spawnPlayer('maxi', new Phaser.Math.Vector2(-17, -7), 30);\r\n    this.cameras.main.startFollow(this.player.gameObject, false, 0.1, 0.1);\r\n\r\n    const stalker = this.entitySpawner.spawnStalker(new Phaser.Math.Vector2(6, 11), 20);\r\n\r\n    timer(10000)\r\n      .subscribe(() => {\r\n        stalker.equipArmor(new Armor({\r\n          name: 'Leather vest',\r\n          texture: 'leather_vest'\r\n        }));\r\n        stalker.damage(20);\r\n        this.player.damage(20);\r\n      });\r\n\r\n    this.player.equipArmor(new Armor({\r\n      name: 'Leather vest',\r\n      texture: 'leather_vest'\r\n    }));\r\n\r\n    this.backgroundImage = this.add.tileSprite(\r\n      0, 0,\r\n      this.sys.game.canvas.width + 100,\r\n      this.sys.game.canvas.height + 100,\r\n      'grass01'\r\n    );\r\n\r\n    this.backgroundImage.setDepth(-50);\r\n\r\n    this.debugGraphics = this.add.graphics().setDepth(2).setAlpha(0.75);\r\n\r\n    this.events.on('postupdate', this.postupdate.bind(this));\r\n\r\n    this.levelUI.push(new UI.HealthBarPlayer(this));\r\n  }\r\n\r\n  preload() {\r\n    AssetService.loadBlockSprites(this.load);\r\n\r\n    AssetService.loadEntitySprites(this.load);\r\n\r\n    AssetService.loadArmorSprites(this.load);\r\n  }\r\n\r\n  update() {\r\n    this.entities.forEach(e => e.update());\r\n\r\n    this.backgroundImage.setPosition(\r\n      this.cameras.main.worldView.centerX,\r\n      this.cameras.main.worldView.centerY\r\n    );\r\n    this.backgroundImage.setTilePosition(\r\n      this.cameras.main.worldView.centerX,\r\n      this.cameras.main.worldView.centerY\r\n    );\r\n  }\r\n\r\n  postupdate() {\r\n    this.levelUI.forEach(ui => ui.update());\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AssetService {\r\n  public static loadBlockSprites(loader: Phaser.Loader.LoaderPlugin): void {\r\n    loader.image('grass01', 'assets/textures/blocks/grass01.png');\r\n    loader.image('stone_wall01', 'assets/textures/blocks/stone_wall01.png');\r\n    loader.image('stone_floor01', 'assets/textures/blocks/stone_floor01.png');\r\n    loader.image('tileset', 'assets/textures/blocks/tileset-extruded.png');\r\n  }\r\n\r\n  public static loadEntitySprites(loader: Phaser.Loader.LoaderPlugin): void {\r\n    loader.image('humanoid', 'assets/textures/entities/humanoid.png');\r\n  }\r\n\r\n  public static loadArmorSprites(loader: Phaser.Loader.LoaderPlugin): void {\r\n    loader.image('leather_vest', 'assets/textures/items/armor/leather_vest.png');\r\n    loader.image('leather_vest_outline', 'assets/textures/items/armor/leather_vest_outline.png');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InputKeys } from '../models/inputKeys.model';\r\nimport { Level } from '../scenes/levelScene';\r\nimport { CharacterEntity } from '../gameplay/entities/characterEntity';\r\nimport { PlayerController } from '../gameplay/controllers/playerController';\r\nimport { Constants } from '../core/constants';\r\nimport { Faction } from '../core/factions';\r\nimport { WalkerController } from '../gameplay/controllers/walkerController';\r\nimport { UI } from '../ui/ui';\r\nimport { HumanoidEntity } from '../gameplay/entities/humanoidEntity';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EntitySpawnerService {\r\n  private inputKeys: InputKeys;\r\n  private levelScene: Level;\r\n\r\n  public init(inputKeys: InputKeys, levelScene: Level) {\r\n    this.inputKeys = inputKeys;\r\n    this.levelScene = levelScene;\r\n  }\r\n\r\n  public spawnPlayer(playerName: string, position: Phaser.Math.Vector2, speed: number): HumanoidEntity {\r\n    const gameObject = this.createRenderTexture(\r\n      position,\r\n      new Phaser.Math.Vector2(\r\n        this.levelScene.textures.getFrame('humanoid', 0).width,\r\n        this.levelScene.textures.getFrame('humanoid', 0).height\r\n      )\r\n    ).setDepth(6);\r\n\r\n    gameObject.body\r\n      .setSize(Constants.Character.COLLIDER_W, Constants.Character.COLLIDER_H)\r\n      .setOffset(Constants.Character.COLLIDER_OFFSET_X, Constants.Character.COLLIDER_OFFSET_Y);\r\n\r\n    const entity = new HumanoidEntity({\r\n      name: playerName,\r\n      gameObject,\r\n      maxHealth: 100,\r\n      level: 1,\r\n      speed,\r\n      bodyTexture: 'humanoid'\r\n    });\r\n\r\n    entity.controller = new PlayerController(this.inputKeys);\r\n\r\n    entity.destroyed.subscribe(() => {\r\n      const entityIndex = this.levelScene.entities.indexOf(entity);\r\n\r\n      if (entityIndex >= 0) {\r\n        this.levelScene.entities.splice(entityIndex, 1);\r\n      }\r\n\r\n      console.log(this.levelScene.player);\r\n    });\r\n\r\n    this.levelScene.entities.push(entity);\r\n\r\n    return entity;\r\n  }\r\n\r\n  public spawnStalker(position: Phaser.Math.Vector2, speed: number): HumanoidEntity {\r\n    const gameObject = this.createRenderTexture(\r\n      position,\r\n      new Phaser.Math.Vector2(\r\n        this.levelScene.textures.getFrame('humanoid', 0).width,\r\n        this.levelScene.textures.getFrame('humanoid', 0).height\r\n      )\r\n    ).setDepth(3);\r\n\r\n    gameObject.body\r\n      .setSize(Constants.Character.COLLIDER_W, Constants.Character.COLLIDER_H)\r\n      .setOffset(Constants.Character.COLLIDER_OFFSET_X, Constants.Character.COLLIDER_OFFSET_Y);\r\n\r\n    const entity = new HumanoidEntity({\r\n      name: 'Stalker',\r\n      gameObject,\r\n      maxHealth: 100,\r\n      level: 1,\r\n      speed,\r\n      bodyTexture: 'humanoid'\r\n    });\r\n\r\n    entity.faction = Faction.Baddies;\r\n    entity.controller = new WalkerController(entity, this.levelScene, 512);\r\n\r\n    const healthBar = new UI.HealthBarSmall(this.levelScene, entity);\r\n    const nameLabel = new UI.EntityHeader(this.levelScene, entity, false);\r\n\r\n    entity.destroyed.subscribe(() => {\r\n      healthBar.destroy();\r\n      nameLabel.destroy();\r\n\r\n      const healthBarIndex = this.levelScene.levelUI.indexOf(healthBar);\r\n      if (healthBarIndex >= 0) {\r\n        this.levelScene.levelUI.splice(healthBarIndex, 1);\r\n      }\r\n\r\n      const labelIndex = this.levelScene.levelUI.indexOf(nameLabel);\r\n      if (labelIndex >= 0) {\r\n        this.levelScene.levelUI.splice(labelIndex, 1);\r\n      }\r\n\r\n      const entityIndex = this.levelScene.entities.indexOf(entity);\r\n      if (entityIndex >= 0) {\r\n        this.levelScene.entities.splice(entityIndex, 1);\r\n      }\r\n    });\r\n\r\n    this.levelScene.levelUI.push(healthBar);\r\n    this.levelScene.levelUI.push(nameLabel);\r\n    this.levelScene.entities.push(entity);\r\n\r\n    return entity;\r\n  }\r\n\r\n  private createSpriteGameObject(\r\n    position: Phaser.Math.Vector2,\r\n    sprite: string\r\n  ): Phaser.GameObjects.Sprite & { body: Phaser.Physics.Arcade.Body } {\r\n    let gameObject: Phaser.GameObjects.Sprite & { body: Phaser.Physics.Arcade.Body };\r\n\r\n    gameObject = this.levelScene.add.sprite(\r\n      position.x * Constants.Level.GRID_SIZE_X,\r\n      position.y * Constants.Level.GRID_SIZE_Y,\r\n      sprite\r\n    ) as any;\r\n\r\n    return this.setupPhysics(gameObject);\r\n  }\r\n\r\n  private createRenderTexture(\r\n    position: Phaser.Math.Vector2,\r\n    size: Phaser.Math.Vector2\r\n  ): Phaser.GameObjects.RenderTexture & { body: Phaser.Physics.Arcade.Body } {\r\n    let gameObject: Phaser.GameObjects.RenderTexture & { body: Phaser.Physics.Arcade.Body };\r\n\r\n    gameObject = this.levelScene.add.renderTexture(\r\n      position.x * Constants.Level.GRID_SIZE_X,\r\n      position.y * Constants.Level.GRID_SIZE_Y,\r\n      size.x,\r\n      size.y\r\n    ) as any;\r\n\r\n    return this.setupPhysics(gameObject);\r\n  }\r\n\r\n  private setupPhysics<T extends Phaser.GameObjects.GameObject>(\r\n    gameObject: T & { body: Phaser.Physics.Arcade.Body }\r\n  ): T & { body: Phaser.Physics.Arcade.Body } {\r\n    this.levelScene.physics.add.existing(gameObject);\r\n    this.levelScene.physics.add.collider(\r\n      gameObject,\r\n      this.levelScene.mapGrid.getAllChunks()\r\n    );\r\n\r\n    gameObject.body.checkCollision.up = true;\r\n    gameObject.body.checkCollision.down = true;\r\n    gameObject.body.checkCollision.left = true;\r\n    gameObject.body.checkCollision.right = true;\r\n\r\n    gameObject.body.useDamping = true;\r\n    gameObject.body.setDrag(0.85, 0.85);\r\n\r\n    return gameObject;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InputKeys } from '../models/inputKeys.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InputService {\r\n  private inputs = {\r\n    up: 'W',\r\n    down: 'S',\r\n    left: 'A',\r\n    right: 'D'\r\n  };\r\n\r\n  public getInputKeys(keyboard: Phaser.Input.Keyboard.KeyboardPlugin): InputKeys {\r\n    return {\r\n      up: keyboard.addKey(this.inputs.up),\r\n      down: keyboard.addKey(this.inputs.down),\r\n      left: keyboard.addKey(this.inputs.left),\r\n      right: keyboard.addKey(this.inputs.right),\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Level } from '../scenes/levelScene';\r\nimport { LevelSerialization } from '../models/levelSerialization.model';\r\nimport { BlockIds } from '../core/blocks';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LevelLoaderService {\r\n  public exportLevel(level: Level): string {\r\n    const minLevel: LevelSerialization.MinifiedLevel = {\r\n      l: []\r\n    };\r\n\r\n    for (const layer of level.mapGrid.getUsedLayers()) {\r\n      minLevel.l.push([\r\n        layer,\r\n        level.mapGrid.getAllOfLayer(layer).map(b => [b.x, b.y, BlockIds.indexOf(b.name)])\r\n      ]);\r\n    }\r\n\r\n    return JSON.stringify(minLevel);\r\n  }\r\n\r\n  public importlevel(levelJson: string, level: Level): void {\r\n    const minLevel: LevelSerialization.MinifiedLevel = JSON.parse(levelJson);\r\n\r\n    for (const layer of minLevel.l) {\r\n      for (const block of layer[1]) {\r\n        level.mapGrid.addBlock(new Phaser.Math.Vector2(block[0], block[1]), BlockIds[block[2]], layer[0]);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CharacterEntity } from '../gameplay/entities/characterEntity';\r\nimport { Level } from '../scenes/levelScene';\r\nimport { fromEvent } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nexport class EntityHeader extends Phaser.GameObjects.DOMElement {\r\n  private static readonly elementHTML = `\r\n    <div style='\r\n      color: white;\r\n      font-size: 14px;\r\n      user-select: none;\r\n      width: fit-content;\r\n    '>\r\n      [<span id='level'></span>] <span id='name'></span>\r\n    </div>\r\n  `;\r\n\r\n  constructor(scene: Level, public target: CharacterEntity, public alwaysVisible = true) {\r\n    super(\r\n      scene,\r\n      target.gameObject.body.position.x,\r\n      target.gameObject.body.position.y,\r\n      'div'\r\n    );\r\n    this.setHTML(EntityHeader.elementHTML);\r\n\r\n    const nameLabel = this.getChildByID('name') as HTMLElement;\r\n    const levelLabel = this.getChildByID('level') as HTMLElement;\r\n\r\n    nameLabel.innerText = target.entityName;\r\n    levelLabel.innerText = target.level.toString();\r\n\r\n    this.updateSize();\r\n    this.setDepth(target.gameObject.depth + 1);\r\n\r\n    scene.add.existing(this);\r\n\r\n    if (!alwaysVisible) {\r\n      this.setVisible(false);\r\n      target.gameObject.setInteractive();\r\n\r\n      fromEvent(target.gameObject, 'pointerover')\r\n        .pipe(takeUntil(target.destroyed))\r\n        .subscribe(() => {\r\n          this.setVisible(true);\r\n        });\r\n      fromEvent(target.gameObject, 'pointerout')\r\n        .pipe(takeUntil(target.destroyed))\r\n        .subscribe(() => {\r\n          this.setVisible(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  update(time: number, delta: number) {\r\n    super.update(time, delta);\r\n    const bounds = this.target.gameObject.getTopCenter();\r\n    this.setPosition(\r\n      bounds.x,\r\n      bounds.y - 12\r\n    );\r\n  }\r\n}\r\n","import { Level } from '../scenes/levelScene';\r\n\r\nexport class HealthBarPlayer extends Phaser.GameObjects.DOMElement {\r\n  private static readonly elementHTML = `\r\n    <div style='\r\n      background-color: #383838;\r\n      border: 2px solid black;\r\n      box-sizing: content-box;\r\n      width: 128px;\r\n      height: 16px;\r\n    '>\r\n      <div id='full' style='\r\n        height: 100%;\r\n        width: 100%;\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n      '>\r\n        <div style='\r\n          height: 100%;\r\n          width: 100%;\r\n          background-color: red;\r\n        '></div>\r\n        <div style='\r\n          height: 40%;\r\n          background-color: black;\r\n          opacity: 0.3;\r\n          position: absolute;\r\n          bottom: 0;\r\n          right: 0;\r\n          left: 0;\r\n        '></div>\r\n      </div>\r\n      <div id='label' style='\r\n        color: white;\r\n        font-size: 16px;\r\n        position: absolute;\r\n        top: 2px;\r\n        left: 2px;\r\n        right: 2px;\r\n        bottom: 2px;\r\n        display: flex;\r\n        flex-flow: column nowrap;\r\n        justify-content: center;\r\n        align-items: center;\r\n      '>\r\n        100/100\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  constructor(private levelScene: Level) {\r\n    super(\r\n      levelScene,\r\n      70,\r\n      14,\r\n      'div'\r\n    );\r\n    this.setHTML(HealthBarPlayer.elementHTML);\r\n    this.setScrollFactor(0);\r\n\r\n    levelScene.add.existing(this);\r\n  }\r\n\r\n  update(time: number, delta: number) {\r\n    const plr = this.levelScene.player;\r\n\r\n    const bar = this.getChildByID('full') as HTMLElement;\r\n    bar.style.width = `${Math.max(Math.min(100, plr.health / plr.maxHealth * 100), 0)}%`;\r\n\r\n    const label = this.getChildByID('label') as HTMLElement;\r\n    label.innerText = `${plr.health}/${plr.maxHealth}`;\r\n  }\r\n}\r\n","import { Level } from '../scenes/levelScene';\r\nimport { CharacterEntity } from '../gameplay/entities/characterEntity';\r\n\r\nexport class HealthBarSmall extends Phaser.GameObjects.DOMElement {\r\n  private static readonly elementHTML = `\r\n    <div style='\r\n      background-color: red;\r\n      width: 48px;\r\n      height: 2px;\r\n    '>\r\n      <div id='full' style='\r\n        height: 100%;\r\n        width: 100%;\r\n        background-color: lime;\r\n      '>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  constructor(scene: Level, public target: CharacterEntity) {\r\n    super(\r\n      scene,\r\n      target.gameObject.body.position.x,\r\n      target.gameObject.body.position.y,\r\n      'div'\r\n    );\r\n    this.setHTML(HealthBarSmall.elementHTML);\r\n\r\n    this.updateSize();\r\n    this.setDepth(target.gameObject.depth + 1);\r\n\r\n    scene.add.existing(this);\r\n  }\r\n\r\n  update(time: number, delta: number) {\r\n    super.update(time, delta);\r\n    const bounds = this.target.gameObject.getBottomCenter();\r\n    this.setPosition(\r\n      bounds.x,\r\n      bounds.y + 4\r\n    );\r\n\r\n    const bar = this.getChildByID('full') as HTMLElement;\r\n    bar.style.width = `${Math.max(Math.min(100, this.target.health / this.target.maxHealth * 100), 0)}%`;\r\n\r\n    this.visible = this.target.health < this.target.maxHealth;\r\n  }\r\n}\r\n","import { HealthBarPlayer } from './healthBarPlayer';\r\nimport { HealthBarSmall } from './healthBarSmall';\r\nimport { EntityHeader } from './entityHeader';\r\n\r\nexport const UI = {\r\n  HealthBarPlayer,\r\n  HealthBarSmall,\r\n  EntityHeader\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}